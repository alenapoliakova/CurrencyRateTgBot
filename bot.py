from telebot import TeleBot, types
from requests import get
from re import findall
from bs4 import BeautifulSoup as bs
from time import strftime, localtime
from settings import BOT_TOKEN, BOT_NAME


bot = TeleBot(BOT_TOKEN, parse_mode='html')
name = BOT_NAME


db = {}
data = {
    'start': f'–ü—Ä–∏–≤–µ—Ç! –ë–æ—Ç <b>{name}</b> –¥–µ–ª–∏—Ç—Å—è —Å –≤–∞–º–∏ –∫—É—Ä—Å–æ–º –≤–∞–ª—é—Ç —Å <b>—Å–∞–π—Ç–∞ –¶–ë</b>.\n\n'
             f'–û—Ç–ø—Ä–∞–≤—å—Ç–µ <b>/currency</b>, —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –≤–∞–ª—é—Ç—É.',
    'open_markup': '–û—Ç–∫—Ä–æ–π—Ç–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤–∞–ª—é—Ç—ã.',
    'close_markup': '–í—ã –∑–∞–∫—Ä—ã–ª–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É. –û—Ç–ø—Ä–∞–≤—å—Ç–µ <b>/currency</b>, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É.'
}


def get_currency(actual_currency: str):
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ –∫—É—Ä—Å–∞ –¶–ë. –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–π –∫—É—Ä—Å —É–∂–µ –ø–∞—Ä—Å–∏–ª—Å—è, —Ç–æ –¥–∞–Ω–Ω—ã–µ –≤–æ–∑—å–º—É—Ç—Å—è –∏–∑ —Å–ª–æ–≤–∞—Ä—è db.
    :param actual_currency: –ò–º—è –≤–∞–ª—é—Ç—ã.
    :return: –¢–µ–∫—Å—Ç —Å –∏–º–µ–Ω–µ–º –≤–∞–ª—é—Ç—ã –∏ –µ—ë –∫—É—Ä—Å–æ–º.
    """
    day, month, year = strftime("%d %m %Y", localtime()).split()

    currency = db.get(f'{day} {month} {year} {actual_currency}', None)
    if currency:
        return f'–ö—É—Ä—Å <b>{currency[0]}</b> –Ω–∞ {day}.{month}.{year}: {currency[1]}'
    else:
        url = f'https://cbr.ru/scripts/XML_daily.asp?date_req={day}/{month}/{year}'

        request = get(url)
        soup = bs(request.text, 'lxml')

        for tag in soup.findAll('valute'):
            result = tag.get_text(strip=True)
            name_of_currency = ' '.join(findall(r'[–∞-—è–ê-—è]+', result))

            numbers = findall(r'[0-9]+', result)
            price = f'{numbers[-2]}.{numbers[-1]}'

            if actual_currency in name_of_currency:
                db[f'{day} {month} {year} {actual_currency}'] = (name_of_currency, price)
                return f'–ö—É—Ä—Å <b>{name_of_currency}</b> –Ω–∞ {day}.{month}.{year}: {price}'


@bot.message_handler(commands='start')
def start(message):
    bot.send_message(message.chat.id, data['start'])


@bot.message_handler(commands='currency')
def currency(message):
    markup = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)

    button_1 = types.KeyboardButton('–ö—É—Ä—Å –î–æ–ª–ª–∞—Ä–∞ –°–®–ê üí≤')
    button_2 = types.KeyboardButton('–ö—É—Ä—Å –ï–≤—Ä–æ üí∂')
    button_3 = types.KeyboardButton('–ö—É—Ä—Å –§—É–Ω—Ç–∞ —Å—Ç–µ—Ä–ª–∏–Ω–≥–æ–≤ üí∑')
    button_4 = types.KeyboardButton('–ö—É—Ä—Å –ë–µ–ª–æ—Ä—É—Å—Å–∫–æ–≥–æ —Ä—É–±–ª—è üáßüáæ')
    button_5 = types.KeyboardButton('–ù–∞–∑–∞–¥')

    markup.add(button_1, button_2, button_3, button_4, button_5)

    bot.send_message(message.chat.id, data['open_markup'], reply_markup=markup)


@bot.message_handler(content_types='text')
def reply(message):
    match message.text:
        case '–ö—É—Ä—Å –î–æ–ª–ª–∞—Ä–∞ –°–®–ê üí≤':
            bot.send_message(message.chat.id, get_currency('–î–æ–ª–ª–∞—Ä –°–®–ê'))
        case '–ö—É—Ä—Å –ï–≤—Ä–æ üí∂':
            bot.send_message(message.chat.id, get_currency('–ï–≤—Ä–æ'))
        case '–ö—É—Ä—Å –§—É–Ω—Ç–∞ —Å—Ç–µ—Ä–ª–∏–Ω–≥–æ–≤ üí∑':
            bot.send_message(message.chat.id, get_currency('–§—É–Ω—Ç —Å—Ç–µ—Ä–ª–∏–Ω–≥–æ–≤'))
        case '–ö—É—Ä—Å –ë–µ–ª–æ—Ä—É—Å—Å–∫–æ–≥–æ —Ä—É–±–ª—è üáßüáæ':
            bot.send_message(message.chat.id, get_currency('–ë–µ–ª–æ—Ä—É—Å—Å–∫–∏–π —Ä—É–±–ª—å'))
        case '–ù–∞–∑–∞–¥':
            bot.send_message(message.chat.id, data['close_markup'], reply_markup=types.ReplyKeyboardRemove())


bot.polling(non_stop=True)
